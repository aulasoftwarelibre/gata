<?php

// this file is auto-generated by prolic/fpp
// don't edit this file manually

declare(strict_types=1);

/*
 * This file is part of the `gata` project.
 *
 * (c) Aula de Software Libre de la UCO <aulasoftwarelibre@uco.es>
 *
 * For the full copyright and license information, please view the LICENSE
 * file that was distributed with this source code.
 */

namespace AulaSoftwareLibre\Gata\Domain\Idea\Event;

final class IdeaWasRedescribed extends \Prooph\EventSourcing\AggregateChanged
{
    public const MESSAGE_NAME = 'AulaSoftwareLibre\Gata\Domain\Idea\Event\IdeaWasRedescribed';

    protected $messageName = self::MESSAGE_NAME;

    protected $payload = [];

    private $ideaId;
    private $description;

    public function ideaId(): \AulaSoftwareLibre\Gata\Domain\Idea\Model\IdeaId
    {
        if (null === $this->ideaId) {
            $this->ideaId = \AulaSoftwareLibre\Gata\Domain\Idea\Model\IdeaId::fromString($this->aggregateId());
        }

        return $this->ideaId;
    }

    public function description(): \AulaSoftwareLibre\Gata\Domain\Idea\Model\IdeaDescription
    {
        if (null === $this->description) {
            $this->description = \AulaSoftwareLibre\Gata\Domain\Idea\Model\IdeaDescription::fromString($this->payload['description']);
        }

        return $this->description;
    }

    public static function with(\AulaSoftwareLibre\Gata\Domain\Idea\Model\IdeaId $ideaId, \AulaSoftwareLibre\Gata\Domain\Idea\Model\IdeaDescription $description): IdeaWasRedescribed
    {
        return new self($ideaId->toString(), [
            'description' => $description->toString(),
        ]);
    }

    protected function setPayload(array $payload): void
    {
        if (!isset($payload['description']) || !\is_string($payload['description'])) {
            throw new \InvalidArgumentException("Key 'description' is missing in payload or is not a string");
        }

        $this->payload = $payload;
    }
}
