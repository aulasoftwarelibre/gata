<?php

// this file is auto-generated by prolic/fpp
// don't edit this file manually

declare(strict_types=1);

/*
 * This file is part of the `gata` project.
 *
 * (c) Aula de Software Libre de la UCO <aulasoftwarelibre@uco.es>
 *
 * For the full copyright and license information, please view the LICENSE
 * file that was distributed with this source code.
 */

namespace AulaSoftwareLibre\Gata\Domain\Comment\Event;

final class CommentWasAdded extends \Prooph\EventSourcing\AggregateChanged
{
    public const MESSAGE_NAME = 'AulaSoftwareLibre\Gata\Domain\Comment\Event\CommentWasAdded';

    protected $messageName = self::MESSAGE_NAME;

    protected $payload = [];

    private $commentId;
    private $ideaId;
    private $userId;
    private $text;

    public function commentId(): \AulaSoftwareLibre\Gata\Domain\Comment\Model\CommentId
    {
        if (null === $this->commentId) {
            $this->commentId = \AulaSoftwareLibre\Gata\Domain\Comment\Model\CommentId::fromString($this->aggregateId());
        }

        return $this->commentId;
    }

    public function ideaId(): \AulaSoftwareLibre\Gata\Domain\Idea\Model\IdeaId
    {
        if (null === $this->ideaId) {
            $this->ideaId = \AulaSoftwareLibre\Gata\Domain\Idea\Model\IdeaId::fromString($this->payload['ideaId']);
        }

        return $this->ideaId;
    }

    public function userId(): \AulaSoftwareLibre\Gata\Domain\User\Model\UserId
    {
        if (null === $this->userId) {
            $this->userId = \AulaSoftwareLibre\Gata\Domain\User\Model\UserId::fromString($this->payload['userId']);
        }

        return $this->userId;
    }

    public function text(): \AulaSoftwareLibre\Gata\Domain\Comment\Model\CommentText
    {
        if (null === $this->text) {
            $this->text = \AulaSoftwareLibre\Gata\Domain\Comment\Model\CommentText::fromString($this->payload['text']);
        }

        return $this->text;
    }

    public static function with(\AulaSoftwareLibre\Gata\Domain\Comment\Model\CommentId $commentId, \AulaSoftwareLibre\Gata\Domain\Idea\Model\IdeaId $ideaId, \AulaSoftwareLibre\Gata\Domain\User\Model\UserId $userId, \AulaSoftwareLibre\Gata\Domain\Comment\Model\CommentText $text): CommentWasAdded
    {
        return new self($commentId->toString(), [
            'ideaId' => $ideaId->toString(),
            'userId' => $userId->toString(),
            'text' => $text->toString(),
        ]);
    }

    protected function setPayload(array $payload): void
    {
        if (!isset($payload['ideaId']) || !\is_string($payload['ideaId'])) {
            throw new \InvalidArgumentException("Key 'ideaId' is missing in payload or is not a string");
        }

        if (!isset($payload['userId']) || !\is_string($payload['userId'])) {
            throw new \InvalidArgumentException("Key 'userId' is missing in payload or is not a string");
        }

        if (!isset($payload['text']) || !\is_string($payload['text'])) {
            throw new \InvalidArgumentException("Key 'text' is missing in payload or is not a string");
        }

        $this->payload = $payload;
    }
}
